# Please use `/` only as path separator, it'll allow to work the test suite independent of OS (windows/linux/mac/efi)
[GENERAL_SETTINGS]
# default general configurations
# If blank or not able to use specified access method then "stub" offline method will be considered
ACCESS_METHOD = stub
# Default encoding method to be used i.e. ascii|utf-8|utf-16
ENCODING = utf-8
# Performance settings allows to avoid unnecessary imports of file methods
PERFORMANCE = False

[DIRECTORY_SETTINGS]
# path from xmlcli package at where all the output file should be stored
# Absolute path will be considered first, but if that does not exist then relative path will be checked and used!
# if OUT_DIR is specified as `out` then it's relative path would be xmlcli/out
OUT_DIR = out

[TOOL_SETTINGS]
# This settings contains location for binary files
# as default scripts will look for absolute path, else it will look to relative path from tool directory under xmlcli/tools/
# Tiano Compression Utility
TIANO_COMPRESS_BIN = TianoCompress
# Brotli Compression Utility
BROTLI_COMPRESS_BIN = Brotli

[LOG_SETTINGS]
# Set logging title which is to be displayed in log file
LOGGER_TITLE = XmlCli
# Toggle whether to log the output processed by test_suite to the file or not
FILE_LOG = True
# Toggle whether to log the output processed to the console or not
CONSOLE_STREAM_LOG = True
# directory name for storing log files (relative to the OUT_DIR folder mentioned at DIRECTORY_SETTINGS > OUT_DIR)
# if LOG_DIR is specified as `logs' then it's relative path would be xmlcli/out/logs
LOG_DIR = logs
# OPTIONS for LOG_LEVEL = DEBUG|INFO|ERROR|WARN|CRITICAL|RESULT
LOG_LEVEL = INFO
# Below option is to differ console log level from file logging
CONSOLE_LOG_LEVEL = INFO
# Defines format of logging
# Print only message if LOG_LEVEL is set to INFO
INFO_LOG_FORMAT = %(message)s
RESULT_LOG_FORMAT = %(message)s
WARN_LOG_FORMAT = %(message)s
ERROR_LOG_FORMAT = %(message)s
# Detailed logging if log level set to DEBUG
DEBUG_LOG_FORMAT = [%(filename)s:%(lineno)3s - %(funcName)20s() T%(asctime)s [%(name)-8s] [%(levelname)s]]: %(message)s
# Date format for logging
# Date format used in log file with log messages
LOG_DATE_FORMAT = %Y-%d-%m_%H.%M.%S.%f
# Name of log file [optional - to create log file name with customized name]
LOG_FILE_NAME = XmlCli.log
# Date format to be append to store log file name
LOG_FILE_NAME_DATE = %Y-%d-%m
# Specify whether to display configurations of directory and logging or not
DISPLAY_CONFIGURATION = False

[INITIAL_CLEANUP]
# If set to True, it would consume a time to cleanup the files (may looks as a performance gap)
# If set to False, none of the configurations below matter!!!
CLEANUP = True
# Specify file extension to perform/remove those files from directory structure before executing any commands
CACHE_CLEAN_EXTENSIONS = .pyc,.pyo
# Specify whether to delete all files in OUT_DIR
CLEAN_OUT_DIR = False

[EXPERIMENTAL_FEATURES_SETTINGS]
# Toggle whether to use experimental features or not
ENABLE_EXPERIMENTAL_FEATURES = True

[ACCESS_METHODS]
# To link access method provide relative path from source (`src/`) directory or absolute path
# To create new access method refer: access/base/README.md
stub = access/stub/stub.ini
offline = access/stub/stub.ini
# Interface for Linux
linux = access/linux/linux.ini
# Interface for Windows
winrwe = access/winrwe/winrwe.ini
# Interface for EFI Shell
uefi = access/uefi/uefi.ini
efi = access/uefi/uefi.ini
